name: cpp-cmake-mingw-prebuilt-release-actions-workflow
on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
      - 'c*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build:
    name: Create Release
    runs-on: windows-latest
    env:
      libraryName: socket.io-client-cpp
      cmakeInstallationPath: socket.io-client-cpp-installation
      tagName: 3.1.0
      mingwTargetZip: socket.io-client-cpp-${{ github.ref_name }}-mingw64-x86_64-posix-seh-rev0-8.1.0.zip
    steps:
      - name: git clone
        shell: cmd
        run: git clone --recursive https://github.com/socketio/socket.io-client-cpp.git && cd socket.io-client-cpp && git checkout ${{ env.tagName }}
        
      - name: curl x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        shell: cmd
        run:  cd /d ${{ github.workspace }} && curl https://github.com/2641797006/c/blob/master/GCC-zip/x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z?raw=true -L --output x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z && dir && 7z.exe x x86_64-8.1.0-release-posix-seh-rt_v6-rev0.7z
        
      - name: curl cmake-3.24.0-windows-x86_64.zip
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/Kitware/CMake/releases/download/v3.24.0/cmake-3.24.0-windows-x86_64.zip -L --output cmake-3.24.0-windows-x86_64.zip && dir && 7z.exe x cmake-3.24.0-windows-x86_64.zip
      
      - name: curl openssl-v3.0.5-x86_64-posix-seh-rev0-8.1.0.zip
        shell: cmd
        run: |
          curl https://github.com/dirkarnez/openssl-prebuilt/releases/download/v3.0.5/openssl-v3.0.5-x86_64-posix-seh-rev0-8.1.0.zip -L --output openssl-v3.0.5-x86_64-posix-seh-rev0-8.1.0.zip &&^
          7z.exe x openssl-v3.0.5-x86_64-posix-seh-rev0-8.1.0.zip -o"openssl-v3.0.5-x86_64-posix-seh-rev0-8.1.0" &&^
          cd openssl-v3.0.5-x86_64-posix-seh-rev0-8.1.0 &&^
          dir
          
      - name: curl PortableGit-2.38.1-64-bit.7z.exe
        shell: cmd
        run: cd /d ${{ github.workspace }} && curl https://github.com/git-for-windows/git/releases/download/v2.38.1.windows.1/PortableGit-2.38.1-64-bit.7z.exe -L --output PortableGit-2.38.1-64-bit.7z.exe && dir && 7z.exe x PortableGit-2.38.1-64-bit.7z.exe -o"PortableGit-2.38.1-64-bit"
        
      - shell: cmd
        run: |
          cd /d "${{ github.workspace }}\cmake-3.24.0-windows-x86_64\share\cmake-3.24\Modules\" &&^
          del /f FindOpenSSL.cmake &&^
          dir
        
      - shell: cmd
        run: |
          cd socket.io-client-cpp &&^
          dir &&^
          "${{ github.workspace }}\PortableGit-2.38.1-64-bit\usr\bin\sed.exe" -i "s/find_package(OpenSSL)/find_package(OpenSSL CONFIG REQUIRED)/g" CMakeLists.txt &&^
          type CMakeLists.txt
          
      - name: set PATH, check mingw version, cmake generate, build and install
        shell: cmd
        run: |
          set workspace=${{ github.workspace }}
          set workspace_linux=%workspace:\=/%
          echo %workspace_linux%
          set PATH=^
          ${{ github.workspace }}\mingw64;^
          ${{ github.workspace }}\mingw64\bin;^
          ${{ github.workspace }}\PortableGit-2.38.1-64-bit\bin;^
          ${{ github.workspace }}\cmake-3.24.0-windows-x86_64\bin;
          gcc --version &&^
          cd socket.io-client-cpp &&^
          cmake.exe -G "MinGW Makefiles" ^
          -DCMAKE_BUILD_TYPE=Release ^
          -DBUILD_SHARED_LIBS=OFF ^
          -DBUILD_UNIT_TESTS=OFF ^
          -DOpenSSL_DIR="%workspace_linux%/openssl-v3.0.5-x86_64-posix-seh-rev0-8.1.0" ^
          -DCMAKE_INSTALL_PREFIX="cmake-build/${{ env.cmakeInstallationPath }}" -B./cmake-build &&^
          cd cmake-build && cmake --build . && cmake --install . 
            
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          directory: "socket.io-client-cpp/cmake-build/${{ env.cmakeInstallationPath }}"
          filename: "${{ env.mingwTargetZip }}"
          
      - name: Release prebuilt
        uses: ncipollo/release-action@v1
        with:
          artifacts: "socket.io-client-cpp/cmake-build/${{ env.cmakeInstallationPath }}/${{ env.mingwTargetZip }}"
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
